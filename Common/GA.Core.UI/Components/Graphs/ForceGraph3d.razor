@using GA.Core.Extensions

<div @ref="_forceGraph3dElement"
     id="@Id"
     style="height: 100%; width: 100%">
</div>

@inject IJSRuntime JSRuntime
@inject ILogger<ForceGraph3d> Logger

@code {
    private ElementReference? _forceGraph3dElement;
    private IJSObjectReference? _jsModule;

    [Parameter]
    public string Id { get; set; } = $"force-graph-3d-{Guid.NewGuid():N}";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            // Import JavaScript module
            _jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./_content/GA.Core.UI/js/modules/forceGraph3d.js");
            if (_jsModule == null) throw new InvalidOperationException();

            await GridInitAsync();
        }
    }

    private async Task GridInitAsync(string libUrl = "https://unpkg.com/3d-force-graph")
    {
        if (_jsModule == null) return;
        if (string.IsNullOrEmpty(_forceGraph3dElement?.Id)) throw new InvalidOperationException();

        try
        {
            await _jsModule.InvokeVoidAsync("forceGraph3dInit", _forceGraph3dElement, libUrl);
        }
        catch (Exception ex)
        {
            var msg = ex.GetMessageAndStackTrace("Failed initializing force graph 3d");
            Logger.LogError(msg);
            // await JSRuntime.ConsoleLogAsync(msg);
            throw;
        }
    }
}