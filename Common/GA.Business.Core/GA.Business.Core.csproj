<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<Configurations>Debug;Release;net7.0</Configurations>
		<OutputType>Library</OutputType>
		<TargetFramework Condition="'$(Configuration)' == 'net7.0'">net7.0</TargetFramework>
		<TargetFramework Condition="'$(Configuration)' != 'net7.0'">net6.0</TargetFramework>
		<LangVersion Condition="'$(Configuration)' != 'net7.0'">preview</LangVersion>
		<EnablePreviewFeatures Condition="'$(Configuration)' != 'net7.0'">true</EnablePreviewFeatures>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
		<IsPackable>true</IsPackable>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<Title>Guitar Alchemist - Core business types</Title>
		<Authors>Stephane Pareilleux</Authors>
		<RepositoryUrl>https://github.com/GuitarAlchemist/ga</RepositoryUrl>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<IncludeSymbols>True</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<Copyright> Copyright (c) Stephane Pareilleux 2022</Copyright>
		<PackageProjectUrl>http://www.guitaralchemist.com/</PackageProjectUrl>
		<PackageTags>Music;Guitar</PackageTags>
		<PackageReleaseNotes>
2022-11-24 - Added GA.Core.Combinatorics.VariationsWithRepetitions class
2022-10-28 - Fixed Instrument types generation from YAML config, fixed fretboard text rendering issues
2022-10-21 - Successful attempt to remove the need for '#r "nuget:FSharp.Configuration,2.0.0"' in notebooks
2022-10-21 - Attempt to remove the need for '#r "nuget:FSharp.Configuration,2.0.0"' in notebooks
2022-10-21 - Added instruments/tunings config
2022-10-15 - Initial version
		</PackageReleaseNotes>
		<PackageDescription>
			Provides classes and interfaces for music and fretted instruments:

			- Notes and Pitches
			- Intervals
			- Scales and Modes
			- Atonal: Pitch class, pitch class set, interval class vector
			- Fretboard
		</PackageDescription>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageId>GuitarAlchemist.$(AssemblyName)</PackageId>
		<PackageVersion>1.0.10-beta1</PackageVersion>
		<AssemblyVersion>1.0.10.0</AssemblyVersion>
		<FileVersion>1.0.10.0</FileVersion>
		<DebugType>embedded</DebugType>
	</PropertyGroup>

	<ItemGroup>
		<Compile Remove="bin\**" />
		<Compile Remove="DotnetInteractive\**" />
		<EmbeddedResource Remove="bin\**" />
		<EmbeddedResource Remove="DotnetInteractive\**" />
		<None Remove="bin\**" />
		<None Remove="DotnetInteractive\**" />
	</ItemGroup>

	<!-- See https://bartwullems.blogspot.com/2022/01/nugetadd-readme-to-your-nuget-package.html -->
	<PropertyGroup>
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>
	<ItemGroup>
		<None Include="README.md" Pack="true" PackagePath="\" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="FSharp.Configuration" Version="2.0.0" />
		<PackageReference Include="Funcky.DiscriminatedUnion" Version="1.1.0" />
		<PackageReference Include="JetBrains.Annotations" Version="2022.3.1" />
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="PCRE.NET" Version="0.19.0" />
	</ItemGroup>

	<ItemGroup>
		<Using Include="Funcky" />
		<Using Include="JetBrains.Annotations" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\GA.Core\GA.Core.csproj">
			<PrivateAssets>All</PrivateAssets>
		</ProjectReference>
		<ProjectReference Include="..\GA.Business.Config\GA.Business.Config.fsproj">
			<PrivateAssets>All</PrivateAssets>
		</ProjectReference>
	</ItemGroup>
	<ItemGroup>
		<Folder Include="Fretboard\Config\" />
	</ItemGroup>

	<!-- See https://josef.codes/dotnet-pack-include-referenced-projects/ -->
	<PropertyGroup>
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
	</PropertyGroup>

	<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
		<ItemGroup>
			<!-- Filter out unnecessary files -->
			<_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
		</ItemGroup>

		<!-- Print batches for debug purposes -->
		<Message Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths), ReferenceCopyLocalPaths.DestinationSubDirectory = %(_ReferenceCopyLocalPaths.DestinationSubDirectory) Filename = %(_ReferenceCopyLocalPaths.Filename) Extension = %(_ReferenceCopyLocalPaths.Extension)" Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />

		<ItemGroup>
			<!-- Add file to package with consideration of sub folder. If empty, the root folder is chosen. -->
			<BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
		</ItemGroup>
	</Target>

</Project>
